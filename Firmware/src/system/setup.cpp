#include "setup.h"
#include "sysdecl.hpp"

void gpioInit(void)
{
	//	// SD2 GPIO
	//	palSetPadMode( GPIOA, 2, PAL_MODE_ALTERNATE(7) | PAL_STM32_OSPEED_HIGHEST);
	//	palSetPadMode( GPIOA, 3, PAL_MODE_ALTERNATE(7) | PAL_STM32_OSPEED_HIGHEST);

	//	// SD6 GPIO
	//	palSetPadMode( GPIOA, 11, PAL_MODE_ALTERNATE(8) | PAL_STM32_OSPEED_HIGHEST);
	//	palSetPadMode( GPIOA, 12, PAL_MODE_ALTERNATE(8) | PAL_STM32_OSPEED_HIGHEST);

	palSetLineMode( LINE_ESC_TELEM, PAL_MODE_ALTERNATE(8) | PAL_STM32_OSPEED_HIGHEST);


	// Output

	//palSetPadMode( GPIOA, 11, PAL_MODE_ALTERNATE(10) | PAL_STM32_OSPEED_HIGHEST);
	//palSetPadMode( GPIOA, 12, PAL_MODE_ALTERNATE(10) | PAL_STM32_OSPEED_HIGHEST | PAL_STM32_PUPDR_PULLUP);

	palSetPadMode( GPIOB, 3, PAL_MODE_ALTERNATE(0) | PAL_STM32_OSPEED_HIGHEST);	// SWO?


//	palSetPadMode( GPIOA, 8, PAL_MODE_ALTERNATE(0) | PAL_STM32_OSPEED_HIGHEST);	// MCO1 - tested 32.7kHz
	palSetPadMode( GPIOC, 9, PAL_MODE_ALTERNATE(0) | PAL_STM32_OSPEED_HIGHEST);	// MCO2 - tested 8MHz

	palSetLineMode( LINE_DEBUG_1, PAL_MODE_OUTPUT_PUSHPULL | PAL_STM32_OSPEED_HIGHEST );
	palSetLineMode( LINE_DEBUG_2, PAL_MODE_OUTPUT_PUSHPULL | PAL_STM32_OSPEED_HIGHEST );

	palSetLineMode( LINE_LED_YELLOW, PAL_MODE_OUTPUT_PUSHPULL | PAL_STM32_OSPEED_HIGHEST );
	palSetLineMode( LINE_LED_BLUE, PAL_MODE_OUTPUT_PUSHPULL | PAL_STM32_OSPEED_HIGHEST );
	palSetLineMode( LINE_LED_GREEN, PAL_MODE_OUTPUT_PUSHPULL | PAL_STM32_OSPEED_HIGHEST );

	palSetLineMode( LINE_BUTTON, PAL_MODE_INPUT_PULLDOWN | PAL_STM32_OSPEED_HIGHEST );


////////////////////////////////////////////////////////
// USB init

	//palSetLineMode( LINE_OTG_VBUS, PAL_MODE_INPUT_ANALOG );
	//palSetLineMode( LINE_OTG_VBUS, PAL_MODE_ALTERNATE(10) | PAL_STM32_PUPDR_FLOATING | PAL_STM32_OSPEED_HIGHEST );
	//palSetLineMode( LINE_OTG_VBUS, PAL_MODE_INPUT | PAL_STM32_PUPDR_FLOATING | PAL_STM32_OSPEED_HIGHEST );
	//palSetLineMode( LINE_OTG_VBUS, PAL_MODE_INPUT| PAL_STM32_OSPEED_HIGHEST );


	// UART1
	palSetLineMode( LINE_UART_TX, PAL_MODE_ALTERNATE(7) | PAL_STM32_OSPEED_HIGHEST);
	palSetLineMode( LINE_UART_RX, PAL_MODE_ALTERNATE(7) | PAL_STM32_OSPEED_HIGHEST);

//	//UART2
//	palSetLineMode( LINE_UART2_TX, PAL_MODE_ALTERNATE(7) | PAL_STM32_OSPEED_HIGHEST);
//	palSetLineMode( LINE_UART2_RX, PAL_MODE_ALTERNATE(7) | PAL_STM32_OSPEED_HIGHEST);


////////////////////////////////////////////////////////
// RPM init

//	palSetLineMode( LINE_RPM, PAL_MODE_ALTERNATE(2) | PAL_STM32_OSPEED_HIGHEST);	// ICU3_CH1


////////////////////////////////////////////////////////
// MOTOR init

	palSetLineMode( LINE_MOTOR_OUT, PAL_MODE_ALTERNATE(1) | PAL_STM32_OSPEED_HIGHEST);

////////////////////////////////////////////////////////
// LCD init

#ifdef LCD_IF_I2C
	palSetLineMode( LINE_I2C_SDA, PAL_MODE_ALTERNATE(9) | PAL_STM32_OSPEED_HIGHEST | PAL_STM32_OTYPE_OPENDRAIN);
	palSetLineMode( LINE_I2C_SCL, PAL_MODE_ALTERNATE(4) | PAL_STM32_OSPEED_HIGHEST | PAL_STM32_OTYPE_OPENDRAIN);
#endif

#ifdef LCD_IF_SPI
	palSetLineMode( LINE_LCD_SPI_SCK, PAL_MODE_ALTERNATE(6) | PAL_STM32_OSPEED_HIGHEST );	// CLK
	palSetLineMode( LINE_LCD_SPI_MISO, PAL_MODE_ALTERNATE(6) | PAL_STM32_OSPEED_HIGHEST );	// MISO	// TODO : check-me ????????????
	palSetLineMode( LINE_LCD_SPI_MOSI, PAL_MODE_ALTERNATE(6) | PAL_STM32_OSPEED_HIGHEST );	// MOSI
	//palSetLineMode( LINE_LCD_SPI_CS, PAL_MODE_ALTERNATE(5) | PAL_STM32_OSPEED_HIGHEST);		// CS NSS

	palSetLineMode( LINE_LCD_SPI_CS, PAL_MODE_OUTPUT_PUSHPULL | PAL_STM32_OSPEED_HIGHEST);	// CS NSS
	palSetLineMode( LINE_LCD_SPI_DC, PAL_MODE_OUTPUT_PUSHPULL | PAL_STM32_OSPEED_HIGHEST);	// DC
	palSetLineMode( LINE_LCD_RESET, PAL_MODE_OUTPUT_PUSHPULL | PAL_STM32_OSPEED_HIGHEST);	// RESET

	palClearLine( LINE_LCD_RESET);
#endif


////////////////////////////////////////////////////////
// ADC init

	palSetLineMode( LINE_ADC_INPUT1, PAL_MODE_INPUT_ANALOG );
	palSetLineMode( LINE_ADC_INPUT2, PAL_MODE_INPUT_ANALOG );
	palSetLineMode( LINE_ADC_INPUT3, PAL_MODE_INPUT_ANALOG );
	palSetLineMode( LINE_ADC_INPUT4, PAL_MODE_INPUT_ANALOG );
	palSetLineMode( LINE_ADC_INPUT5, PAL_MODE_INPUT_ANALOG );
	palSetLineMode( LINE_ADC_INPUT6, PAL_MODE_INPUT_ANALOG );
	palSetLineMode( LINE_ADC_INPUT7, PAL_MODE_INPUT_ANALOG );

	//	palSetLineMode( LINE_ADC_END_PULSE, PAL_MODE_OUTPUT_PUSHPULL ); 	// pulse at the end of conv.


////////////////////////////////////////////////////////
// HX init

	palSetLineMode( LINE_HX_SCK, 	PAL_MODE_OUTPUT_PUSHPULL | PAL_STM32_OSPEED_HIGHEST);
	palSetLineMode( LINE_HX_RATE, 	PAL_MODE_OUTPUT_PUSHPULL | PAL_STM32_OSPEED_HIGHEST);
	palSetLineMode( LINE_HX_DATA1, 	PAL_MODE_INPUT_PULLDOWN | PAL_STM32_OSPEED_HIGHEST);
	palSetLineMode( LINE_HX_DATA2, 	PAL_MODE_INPUT_PULLDOWN | PAL_STM32_OSPEED_HIGHEST);
	palSetLineMode( LINE_HX_DATA3, 	PAL_MODE_INPUT_PULLDOWN | PAL_STM32_OSPEED_HIGHEST);

////////////////////////////////////////////////////////
// RPM init

	palSetLineMode( LINE_RPM, PAL_MODE_ALTERNATE(2) | PAL_STM32_OSPEED_HIGHEST );
//	palSetLineMode( LINE_RPM, PAL_MODE_ALTERNATE(2) | PAL_STM32_OSPEED_HIGHEST );

}

