cmake_minimum_required(VERSION 3.5)

project(ThrustApp LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# QtCreator supports the following variables for Android, which are identical to qmake Android variables.
# Check https://doc.qt.io/qt/deployment-android.html for more information.
# They need to be set before the find_package( ...) calls below.

#if(ANDROID)
#    set(ANDROID_PACKAGE_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/android")
#    if (ANDROID_ABI STREQUAL "armeabi-v7a")
#        set(ANDROID_EXTRA_LIBS
#            ${CMAKE_CURRENT_SOURCE_DIR}/path/to/libcrypto.so
#            ${CMAKE_CURRENT_SOURCE_DIR}/path/to/libssl.so)
#    endif()
#endif()

# find_package(QT NAMES Qt6 Qt5 COMPONENTS Widgets REQUIRED)
# find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Widgets SerialPort REQUIRED)

find_package( Qt5Core REQUIRED )
find_package( Qt5Widgets REQUIRED )
find_package( Qt5SerialPort REQUIRED )


set(TS_FILES 
	ThrustApp_en_US.ts 
	ThrustApp_pl_PL.ts
)

set(PROJECT_SOURCES
	sysdecl.h
	cf_typedef.h
	cf_gvector.h
	main.cpp
	mainwindow.cpp
	mainwindow.h
	controlwidget.cpp
	controlwidget.h
	outputwidget.cpp
	outputwidget.h
	debugview.cpp
	debugview.h
	graphview.cpp
	graphview.h
	document.cpp
	document.h
	serialthread.cpp
	serialthread.h
	thsp_protocol.h
	thsp_packet.hpp
	thsp_handler.cpp
	thsp_handler.hpp
	sbuf.hpp
	measure_data.hpp
	# form_calibration.ui
	# form_connect.ui
	# form_debugmsg.ui
	# form_measurement.ui
#	${TS_FILES}
)

SET ( PROJECT_MOC_HEADERS
	mainwindow.h
	controlwidget.h
	outputwidget.h
	debugview.h
	graphview.h
	document.h
	serialthread.h
)

SET ( PROJECT_UIs
	form_calibration.ui
	form_connect.ui
	form_debugmsg.ui
	form_measurement.ui
)

SET ( PROJECT_RESOURCES
)

SET( QT5_LIBRARIES
	${Qt5Core_LIBRARIES}
	${Qt5Widgets_LIBRARIES}
	${Qt5SerialPort_LIBRARIES}
)

QT5_WRAP_UI ( PROJECT_SOURCES ${xgrit_UIs} )
QT5_WRAP_CPP ( PROJECT_SOURCES ${xgrit_MOC_HEADERS} ) 
QT5_ADD_RESOURCES ( PROJECT_SOURCES ${xgrit_RESOURCES} )

# if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    # qt_add_executable(ThrustApp
        # ${PROJECT_SOURCES}
    # )

 # #   qt_create_translation(QM_FILES ${CMAKE_SOURCE_DIR} ${TS_FILES})
# else()
	# add_executable(ThrustApp
		# ${PROJECT_SOURCES}
	# )

# #    qt5_create_translation(QM_FILES ${CMAKE_SOURCE_DIR} ${TS_FILES})
# endif()

source_group(Resources FILES ${PROJECT_RESOURCES} ${PROJECT_UIs})


add_executable( ThrustApp ${PROJECT_SOURCES} )
target_link_libraries( ThrustApp ${QT5_LIBRARIES} ${QT_QTMAIN_LIBRARY} )
